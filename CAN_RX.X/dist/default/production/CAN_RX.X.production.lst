

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Oct 19 10:41:47 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F458 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  0002E2                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for main@F5712
    65  0002E2  53                 	db	83
    66  0002E3  57                 	db	87
    67  0002E4  49                 	db	73
    68  0002E5  54                 	db	84
    69  0002E6  43                 	db	67
    70  0002E7  48                 	db	72
    71  0002E8  20                 	db	32
    72  0002E9  31                 	db	49
    73                           
    74                           ;initializer for main@F5710
    75  0002EA  53                 	db	83
    76  0002EB  57                 	db	87
    77  0002EC  49                 	db	73
    78  0002ED  54                 	db	84
    79  0002EE  43                 	db	67
    80  0002EF  48                 	db	72
    81  0002F0  20                 	db	32
    82  0002F1  30                 	db	48
    83  0000                     _CANSTAT	set	3950
    84  0000                     _RXB0D7	set	3949
    85  0000                     _RXB0D6	set	3948
    86  0000                     _RXB0D5	set	3947
    87  0000                     _RXB0D4	set	3946
    88  0000                     _RXB0D3	set	3945
    89  0000                     _RXB0D2	set	3944
    90  0000                     _RXB0D1	set	3943
    91  0000                     _RXB0IF	set	32032
    92  0000                     _RXB0IP	set	32040
    93  0000                     _PEIE	set	32662
    94  0000                     _RXF0SIDL	set	3841
    95  0000                     _RXF0SIDH	set	3840
    96  0000                     _TXB0CON	set	3904
    97  0000                     _TXB0SIDH	set	3905
    98  0000                     _TXB0SIDL	set	3906
    99  0000                     _TXB0DLC	set	3909
   100  0000                     _RXB0CONbits	set	3936
   101  0000                     _RXB0SIDH	set	3937
   102  0000                     _RXB0DLC	set	3941
   103  0000                     _RXB0D0	set	3942
   104  0000                     _CANCON	set	3951
   105  0000                     _BRGCON3	set	3954
   106  0000                     _BRGCON2	set	3953
   107  0000                     _BRGCON1	set	3952
   108  0000                     _PORTBbits	set	3969
   109  0000                     _RXB0IE	set	32024
   110  0000                     _GIE	set	32663
   111  0000                     _RXB0SIDL	set	3938
   112  0000                     _TXB0D7	set	3917
   113  0000                     _TXB0D6	set	3916
   114  0000                     _TXB0D5	set	3915
   115  0000                     _TXB0D4	set	3914
   116  0000                     _TXB0D3	set	3913
   117  0000                     _TXB0D2	set	3912
   118  0000                     _TXB0D1	set	3911
   119  0000                     _TXB0D0	set	3910
   120  0000                     _RBPU	set	32655
   121  0000                     _TRISBbits	set	3987
   122                           
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126  0002A6                     __pcinit:
   127                           	callstack 0
   128  0002A6                     start_initialization:
   129                           	callstack 0
   130  0002A6                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Initialize objects allocated to COMRAM (16 bytes)
   134                           ; load TBLPTR registers with __pidataCOMRAM
   135  0002A6  0EE2               	movlw	low __pidataCOMRAM
   136  0002A8  6EF6               	movwf	tblptrl,c
   137  0002AA  0E02               	movlw	high __pidataCOMRAM
   138  0002AC  6EF7               	movwf	tblptrh,c
   139  0002AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   140  0002B0  6EF8               	movwf	tblptru,c
   141  0002B2  EE00  F030         	lfsr	0,__pdataCOMRAM
   142  0002B6  EE10 F010          	lfsr	1,16
   143  0002BA                     copy_data0:
   144  0002BA  0009               	tblrd		*+
   145  0002BC  CFF5 FFEE          	movff	tablat,postinc0
   146  0002C0  50E5               	movf	postdec1,w,c
   147  0002C2  50E1               	movf	fsr1l,w,c
   148  0002C4  E1FA               	bnz	copy_data0
   149  0002C6                     end_of_initialization:
   150                           	callstack 0
   151  0002C6                     __end_of__initialization:
   152                           	callstack 0
   153  0002C6  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   154  0002C8  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   155  0002CA  0100               	movlb	0
   156  0002CC  EF91  F000         	goto	_main	;jump to C main() function
   157                           
   158                           	psect	dataCOMRAM
   159  000030                     __pdataCOMRAM:
   160                           	callstack 0
   161  000030                     main@F5712:
   162                           	callstack 0
   163  000030                     	ds	8
   164  000038                     main@F5710:
   165                           	callstack 0
   166  000038                     	ds	8
   167                           
   168                           	psect	cstackCOMRAM
   169  000001                     __pcstackCOMRAM:
   170                           	callstack 0
   171  000001                     can_read@data1:
   172                           	callstack 0
   173                           
   174                           ; 20 bytes @ 0x0
   175  000001                     	ds	20
   176  000015                     can_write@msg_id:
   177                           	callstack 0
   178  000015                     set_mode@bud:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x14
   182  000015                     	ds	2
   183  000017                     can_write@data:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x16
   187  000017                     	ds	2
   188  000019                     ??_can_write:
   189                           
   190                           ; 1 bytes @ 0x18
   191  000019                     	ds	2
   192  00001B                     can_write@DLC:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x1A
   196  00001B                     	ds	1
   197  00001C                     can_write@LB:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x1B
   201  00001C                     	ds	1
   202  00001D                     can_write@HB:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x1C
   206  00001D                     	ds	1
   207  00001E                     ??_main:
   208                           
   209                           ; 1 bytes @ 0x1D
   210  00001E                     	ds	2
   211  000020                     main@sw_off_data:
   212                           	callstack 0
   213                           
   214                           ; 8 bytes @ 0x1F
   215  000020                     	ds	8
   216  000028                     main@sw_on_data:
   217                           	callstack 0
   218                           
   219                           ; 8 bytes @ 0x27
   220  000028                     	ds	8
   221                           
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 28 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;  sw_on_data      8   39[COMRAM] unsigned char [8]
   232 ;;  sw_off_data     8   31[COMRAM] unsigned char [8]
   233 ;;  strat_bud       1    0        unsigned char 
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   243 ;;      Params:         0       0       0       0       0       0       0
   244 ;;      Locals:        16       0       0       0       0       0       0
   245 ;;      Temps:          2       0       0       0       0       0       0
   246 ;;      Totals:        18       0       0       0       0       0       0
   247 ;;Total ram usage:       18 bytes
   248 ;; Hardware stack levels required when called: 3
   249 ;; This function calls:
   250 ;;		_can_sys_init
   251 ;;		_can_write
   252 ;;		_gpios_init
   253 ;;		_init_inrpt
   254 ;;		_masking_filter
   255 ;;		_set_mode
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text0
   262  000122                     __ptext0:
   263                           	callstack 0
   264  000122                     _main:
   265                           	callstack 28
   266  000122  FFFF               	dw	65535	; assembler added errata NOP
   267                           
   268                           ;main.c: 30:     init_inrpt();
   269  000124  EC79  F001         	call	_init_inrpt	;wreg free
   270                           
   271                           ;main.c: 31:     can_sys_init();
   272  000128  EC86  F001         	call	_can_sys_init	;wreg free
   273  00012C  0E00               	movlw	0
   274  00012E  6E16               	movwf	(set_mode@bud+1)^0,c
   275  000130  0EFA               	movlw	250
   276  000132  6E15               	movwf	set_mode@bud^0,c
   277  000134  ECE5  F000         	call	_set_mode	;wreg free
   278  000138                     
   279                           ;main.c: 33:     masking_filter();
   280  000138  EC68  F001         	call	_masking_filter	;wreg free
   281  00013C                     
   282                           ;main.c: 34:     gpios_init();
   283  00013C  EC80  F001         	call	_gpios_init	;wreg free
   284  000140                     l997:
   285  000140  FFFF               	dw	65535	; assembler added errata NOP
   286                           
   287                           ;main.c: 37:     {;main.c: 38:     char sw_off_data[8] = {'S','W','I','T','C','H',' ', '
      +                          0'};
   288  000142  EE20  F038         	lfsr	2,main@F5710
   289  000146  EE10  F020         	lfsr	1,main@sw_off_data
   290  00014A  0E07               	movlw	7
   291  00014C                     u141:
   292  00014C  CFDB FFE3          	movff	plusw2,plusw1
   293  000150  06E8               	decf	wreg,f,c
   294  000152  E2FC               	bc	u141
   295  000154                     
   296                           ;main.c: 39:     char sw_on_data[8] = {'S','W','I','T','C','H',' ', '1'};
   297  000154  EE20  F030         	lfsr	2,main@F5712
   298  000158  EE10  F028         	lfsr	1,main@sw_on_data
   299  00015C  0E07               	movlw	7
   300  00015E                     u151:
   301  00015E  CFDB FFE3          	movff	plusw2,plusw1
   302  000162  06E8               	decf	wreg,f,c
   303  000164  E2FC               	bc	u151
   304  000166                     
   305                           ;main.c: 41:             can_write(8,0x88,sw_off_data);
   306  000166  0E00               	movlw	0
   307  000168  6E16               	movwf	(can_write@msg_id+1)^0,c
   308  00016A  0E88               	movlw	136
   309  00016C  6E15               	movwf	can_write@msg_id^0,c
   310  00016E  0E20               	movlw	low main@sw_off_data
   311  000170  6E17               	movwf	can_write@data^0,c
   312  000172  0E00               	movlw	high main@sw_off_data
   313  000174  6E18               	movwf	(can_write@data+1)^0,c
   314  000176  0E08               	movlw	8
   315  000178  EC1B  F000         	call	_can_write
   316  00017C                     
   317                           ;main.c: 42:             _delay((unsigned long)((100)*(20000000/4000.0)));
   318  00017C  0E02               	movlw	2
   319  00017E  6E1F               	movwf	(??_main+1)^0,c
   320  000180  0EE8               	movlw	232
   321  000182  6E1E               	movwf	??_main^0,c
   322  000184  0E52               	movlw	82
   323  000186                     u167:
   324  000186  FFFF               	dw	65535	; errata NOP
   325  000188  2EE8               	decfsz	wreg,f,c
   326  00018A  D7FD               	bra	u167
   327  00018C  2E1E               	decfsz	??_main^0,f,c
   328  00018E  D7FB               	bra	u167
   329  000190  2E1F               	decfsz	(??_main+1)^0,f,c
   330  000192  D7F9               	bra	u167
   331  000194                     
   332                           ;main.c: 44:             can_write(8,0xFF,sw_on_data);
   333  000194  0E00               	movlw	0
   334  000196  6E16               	movwf	(can_write@msg_id+1)^0,c
   335  000198  6815               	setf	can_write@msg_id^0,c
   336  00019A  0E28               	movlw	low main@sw_on_data
   337  00019C  6E17               	movwf	can_write@data^0,c
   338  00019E  0E00               	movlw	high main@sw_on_data
   339  0001A0  6E18               	movwf	(can_write@data+1)^0,c
   340  0001A2  0E08               	movlw	8
   341  0001A4  EC1B  F000         	call	_can_write
   342  0001A8                     
   343                           ;main.c: 45:             _delay((unsigned long)((100)*(20000000/4000.0)));
   344  0001A8  0E02               	movlw	2
   345  0001AA  6E1F               	movwf	(??_main+1)^0,c
   346  0001AC  0EE8               	movlw	232
   347  0001AE  6E1E               	movwf	??_main^0,c
   348  0001B0  0E52               	movlw	82
   349  0001B2                     u177:
   350  0001B2  FFFF               	dw	65535	; errata NOP
   351  0001B4  2EE8               	decfsz	wreg,f,c
   352  0001B6  D7FD               	bra	u177
   353  0001B8  2E1E               	decfsz	??_main^0,f,c
   354  0001BA  D7FB               	bra	u177
   355  0001BC  2E1F               	decfsz	(??_main+1)^0,f,c
   356  0001BE  D7F9               	bra	u177
   357  0001C0                     
   358                           ;main.c: 46:             PORTBbits.RB0=0;
   359  0001C0  9081               	bcf	129,0,c	;volatile
   360  0001C2  EFA0  F000         	goto	l997
   361  0001C6  EF19  F000         	goto	start
   362  0001CA                     __end_of_main:
   363                           	callstack 0
   364                           
   365 ;; *************** function _set_mode *****************
   366 ;; Defined at:
   367 ;;		line 17 in file "canconfig.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  bud             2   20[COMRAM] int 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      unsigned char 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   381 ;;      Params:         2       0       0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0
   384 ;;      Totals:         2       0       0       0       0       0       0
   385 ;;Total ram usage:        2 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; Hardware stack levels required when called: 2
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text1
   396  0001CA                     __ptext1:
   397                           	callstack 0
   398  0001CA                     _set_mode:
   399                           	callstack 0
   400  0001CA  FFFF               	dw	65535	; assembler added errata NOP
   401  0001CC                     
   402                           ;canconfig.c: 17: char set_mode(int bud);canconfig.c: 18: {;canconfig.c: 19:     CANCON 
      +                          = 0x80;
   403  0001CC  0E80               	movlw	128
   404  0001CE  6E6F               	movwf	111,c	;volatile
   405  0001D0                     l965:
   406  0001D0  FFFF               	dw	65535	; assembler added errata NOP
   407  0001D2  0E80               	movlw	128
   408  0001D4  186E               	xorwf	110,w,c	;volatile
   409  0001D6  A4D8               	btfss	status,2,c
   410  0001D8  EFF0  F000         	goto	u91
   411  0001DC  EFF3  F000         	goto	u90
   412  0001E0                     u91:
   413  0001E0  FFFF               	dw	65535	; assembler added errata NOP
   414  0001E2  EFE8  F000         	goto	l965
   415  0001E6                     u90:
   416  0001E6  FFFF               	dw	65535	; assembler added errata NOP
   417  0001E8                     
   418                           ;canconfig.c: 22:     if (bud == 250)
   419  0001E8  0EFA               	movlw	250
   420  0001EA  1815               	xorwf	set_mode@bud^0,w,c
   421  0001EC  1016               	iorwf	(set_mode@bud+1)^0,w,c
   422  0001EE  A4D8               	btfss	status,2,c
   423  0001F0  EFFC  F000         	goto	u101
   424  0001F4  EFFF  F000         	goto	u100
   425  0001F8                     u101:
   426  0001F8  FFFF               	dw	65535	; assembler added errata NOP
   427  0001FA  EF2E  F001         	goto	l987
   428  0001FE                     u100:
   429  0001FE  FFFF               	dw	65535	; assembler added errata NOP
   430  000200                     
   431                           ;canconfig.c: 23:     {;canconfig.c: 25:         BRGCON1 = 0xc1;
   432  000200  0EC1               	movlw	193
   433  000202  6E70               	movwf	112,c	;volatile
   434                           
   435                           ;canconfig.c: 26:         BRGCON2 = 0xae;
   436  000204  0EAE               	movlw	174
   437  000206  6E71               	movwf	113,c	;volatile
   438                           
   439                           ;canconfig.c: 27:         BRGCON3 = 0x45;
   440  000208  0E45               	movlw	69
   441  00020A  6E72               	movwf	114,c	;volatile
   442  00020C                     
   443                           ;canconfig.c: 29:         if(BRGCON1 == 0xc1 && BRGCON2 == 0xae && BRGCON3 == 0x45)
   444  00020C  0EC1               	movlw	193
   445  00020E  1870               	xorwf	112,w,c	;volatile
   446  000210  A4D8               	btfss	status,2,c
   447  000212  EF0D  F001         	goto	u111
   448  000216  EF10  F001         	goto	u110
   449  00021A                     u111:
   450  00021A  FFFF               	dw	65535	; assembler added errata NOP
   451  00021C  EF2A  F001         	goto	l983
   452  000220                     u110:
   453  000220  FFFF               	dw	65535	; assembler added errata NOP
   454  000222  0EAE               	movlw	174
   455  000224  1871               	xorwf	113,w,c	;volatile
   456  000226  A4D8               	btfss	status,2,c
   457  000228  EF18  F001         	goto	u121
   458  00022C  EF1B  F001         	goto	u120
   459  000230                     u121:
   460  000230  FFFF               	dw	65535	; assembler added errata NOP
   461  000232  EF2A  F001         	goto	l983
   462  000236                     u120:
   463  000236  FFFF               	dw	65535	; assembler added errata NOP
   464  000238  0E45               	movlw	69
   465  00023A  1872               	xorwf	114,w,c	;volatile
   466  00023C  A4D8               	btfss	status,2,c
   467  00023E  EF23  F001         	goto	u131
   468  000242  EF26  F001         	goto	u130
   469  000246                     u131:
   470  000246  FFFF               	dw	65535	; assembler added errata NOP
   471  000248  EF2A  F001         	goto	l983
   472  00024C                     u130:
   473  00024C  FFFF               	dw	65535	; assembler added errata NOP
   474  00024E                     
   475                           ;canconfig.c: 30:         {;canconfig.c: 31:             return 'Y';
   476  00024E  0E59               	movlw	89
   477  000250  EF31  F001         	goto	l129
   478  000254                     l983:
   479  000254  FFFF               	dw	65535	; assembler added errata NOP
   480                           
   481                           ;canconfig.c: 34:             return 'N';
   482  000256  0E4E               	movlw	78
   483  000258  EF31  F001         	goto	l129
   484  00025C                     l987:
   485  00025C  FFFF               	dw	65535	; assembler added errata NOP
   486                           
   487                           ;canconfig.c: 38:     CANCON = 0x08;
   488  00025E  0E08               	movlw	8
   489  000260  6E6F               	movwf	111,c	;volatile
   490  000262                     l129:
   491  000262  FFFF               	dw	65535	; assembler added errata NOP
   492  000264  0012               	return		;funcret
   493  000266  FFFF               	dw	65535	; errata NOP
   494  000268                     __end_of_set_mode:
   495                           	callstack 0
   496                           
   497 ;; *************** function _masking_filter *****************
   498 ;; Defined at:
   499 ;;		line 11 in file "canconfig.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		None
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   513 ;;      Params:         0       0       0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0       0       0
   516 ;;      Totals:         0       0       0       0       0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; Hardware stack levels required when called: 2
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text2
   528  0002D0                     __ptext2:
   529                           	callstack 0
   530  0002D0                     _masking_filter:
   531                           	callstack 0
   532  0002D0  FFFF               	dw	65535	; assembler added errata NOP
   533  0002D2                     
   534                           ;canconfig.c: 13:     RXF0SIDH = 0x00;
   535  0002D2  0E00               	movlw	0
   536  0002D4  CFE8 FF00          	movff	wreg,3840
   537                           
   538                           ;canconfig.c: 14:     RXF0SIDL = 0x00;
   539  0002D8  0E00               	movlw	0
   540  0002DA  CFE8 FF01          	movff	wreg,3841
   541  0002DE  0012               	return		;funcret
   542  0002E0  FFFF               	dw	65535	; errata NOP
   543  0002E2                     __end_of_masking_filter:
   544                           	callstack 0
   545                           
   546 ;; *************** function _init_inrpt *****************
   547 ;; Defined at:
   548 ;;		line 30 in file "./interrupt.h"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		None
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   562 ;;      Params:         0       0       0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 2
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text3
   577  0002F2                     __ptext3:
   578                           	callstack 0
   579  0002F2                     _init_inrpt:
   580                           	callstack 0
   581  0002F2  FFFF               	dw	65535	; assembler added errata NOP
   582  0002F4                     
   583                           ;./interrupt.h: 32:     GIE = 1;
   584  0002F4  8EF2               	bsf	4082,7,c	;volatile
   585                           
   586                           ;./interrupt.h: 33:     PEIE = 1;
   587  0002F6  8CF2               	bsf	4082,6,c	;volatile
   588                           
   589                           ;./interrupt.h: 34:     RXB0IE = 1;
   590  0002F8  80A3               	bsf	4003,0,c	;volatile
   591                           
   592                           ;./interrupt.h: 35:     RXB0IP = 1;
   593  0002FA  80A5               	bsf	4005,0,c	;volatile
   594  0002FC  0012               	return		;funcret
   595  0002FE  FFFF               	dw	65535	; errata NOP
   596  000300                     __end_of_init_inrpt:
   597                           	callstack 0
   598                           
   599 ;; *************** function _gpios_init *****************
   600 ;; Defined at:
   601 ;;		line 5 in file "gpios.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		None
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   615 ;;      Params:         0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 2
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text4
   630  000300                     __ptext4:
   631                           	callstack 0
   632  000300                     _gpios_init:
   633                           	callstack 0
   634  000300  FFFF               	dw	65535	; assembler added errata NOP
   635  000302                     
   636                           ;gpios.c: 8:     RBPU =0;
   637  000302  9EF1               	bcf	4081,7,c	;volatile
   638                           
   639                           ;gpios.c: 9:     TRISBbits.RB0 = 0;
   640  000304  9093               	bcf	147,0,c	;volatile
   641                           
   642                           ;gpios.c: 10:     TRISBbits.RB7 = 0;
   643  000306  9E93               	bcf	147,7,c	;volatile
   644  000308  0012               	return		;funcret
   645  00030A  FFFF               	dw	65535	; errata NOP
   646  00030C                     __end_of_gpios_init:
   647                           	callstack 0
   648                           
   649 ;; *************** function _can_write *****************
   650 ;; Defined at:
   651 ;;		line 49 in file "./can_read.h"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  DLC             1    wreg     unsigned char 
   654 ;;  msg_id          2   20[COMRAM] int 
   655 ;;  data            2   22[COMRAM] PTR unsigned char 
   656 ;;		 -> main@sw_on_data(8), main@sw_off_data(8), 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  DLC             1   26[COMRAM] unsigned char 
   659 ;;  HB              1   28[COMRAM] unsigned char 
   660 ;;  LB              1   27[COMRAM] unsigned char 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   670 ;;      Params:         4       0       0       0       0       0       0
   671 ;;      Locals:         3       0       0       0       0       0       0
   672 ;;      Temps:          2       0       0       0       0       0       0
   673 ;;      Totals:         9       0       0       0       0       0       0
   674 ;;Total ram usage:        9 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 2
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text5
   685  000036                     __ptext5:
   686                           	callstack 0
   687  000036                     _can_write:
   688                           	callstack 0
   689  000036  FFFF               	dw	65535	; assembler added errata NOP
   690                           
   691                           ;incstack = 0
   692                           ;can_write@DLC stored from wreg
   693  000038  6E1B               	movwf	can_write@DLC^0,c
   694  00003A                     
   695                           ;./can_read.h: 49: void can_write(unsigned char DLC,int msg_id,char data[]);./can_read.h
      +                          : 50: {;./can_read.h: 51:     CANCON = 0x08;
   696  00003A  0E08               	movlw	8
   697  00003C  6E6F               	movwf	111,c	;volatile
   698  00003E                     
   699                           ;./can_read.h: 52:     TXB0DLC = DLC;
   700  00003E  EE2F F045          	lfsr	2,3909
   701  000042  C01B  FFDF         	movff	can_write@DLC,indf2
   702  000046                     
   703                           ;./can_read.h: 54:    char LB = (msg_id<<5)&0xff;
   704  000046  3815               	swapf	can_write@msg_id^0,w,c
   705  000048  46E8               	rlncf	wreg,f,c
   706  00004A  0BE0               	andlw	224
   707  00004C  6E1C               	movwf	can_write@LB^0,c
   708  00004E                     
   709                           ;./can_read.h: 55:    char HB = (msg_id>>3)&0xff;
   710  00004E  C015  F019         	movff	can_write@msg_id,??_can_write
   711  000052  C016  F01A         	movff	can_write@msg_id+1,??_can_write+1
   712  000056  341A               	rlcf	(??_can_write+1)^0,w,c
   713  000058  321A               	rrcf	(??_can_write+1)^0,f,c
   714  00005A  3219               	rrcf	??_can_write^0,f,c
   715  00005C  341A               	rlcf	(??_can_write+1)^0,w,c
   716  00005E  321A               	rrcf	(??_can_write+1)^0,f,c
   717  000060  3219               	rrcf	??_can_write^0,f,c
   718  000062  341A               	rlcf	(??_can_write+1)^0,w,c
   719  000064  321A               	rrcf	(??_can_write+1)^0,f,c
   720  000066  3219               	rrcf	??_can_write^0,f,c
   721  000068  5019               	movf	??_can_write^0,w,c
   722  00006A  6E1D               	movwf	can_write@HB^0,c
   723  00006C                     
   724                           ;./can_read.h: 57:    TXB0SIDL = LB;
   725  00006C  EE2F F042          	lfsr	2,3906
   726  000070  C01C  FFDF         	movff	can_write@LB,indf2
   727  000074                     
   728                           ;./can_read.h: 58:    TXB0SIDH = HB;
   729  000074  EE2F F041          	lfsr	2,3905
   730  000078  C01D  FFDF         	movff	can_write@HB,indf2
   731  00007C                     
   732                           ;./can_read.h: 60:    TXB0D0 = data[0];
   733  00007C  C017  FFD9         	movff	can_write@data,fsr2l
   734  000080  C018  FFDA         	movff	can_write@data+1,fsr2h
   735  000084  50DF               	movf	indf2,w,c
   736  000086  6E19               	movwf	??_can_write^0,c
   737  000088  C019  FF46         	movff	??_can_write,3910
   738  00008C                     
   739                           ;./can_read.h: 61:    TXB0D1 = data[1];
   740  00008C  EE20 F001          	lfsr	2,1
   741  000090  5017               	movf	can_write@data^0,w,c
   742  000092  26D9               	addwf	fsr2l,f,c
   743  000094  5018               	movf	(can_write@data+1)^0,w,c
   744  000096  22DA               	addwfc	fsr2h,f,c
   745  000098  50DF               	movf	indf2,w,c
   746  00009A  6E19               	movwf	??_can_write^0,c
   747  00009C  C019  FF47         	movff	??_can_write,3911
   748  0000A0                     
   749                           ;./can_read.h: 62:    TXB0D2 = data[2];
   750  0000A0  EE20 F002          	lfsr	2,2
   751  0000A4  5017               	movf	can_write@data^0,w,c
   752  0000A6  26D9               	addwf	fsr2l,f,c
   753  0000A8  5018               	movf	(can_write@data+1)^0,w,c
   754  0000AA  22DA               	addwfc	fsr2h,f,c
   755  0000AC  50DF               	movf	indf2,w,c
   756  0000AE  6E19               	movwf	??_can_write^0,c
   757  0000B0  C019  FF48         	movff	??_can_write,3912
   758  0000B4                     
   759                           ;./can_read.h: 63:    TXB0D3 = data[3];
   760  0000B4  EE20 F003          	lfsr	2,3
   761  0000B8  5017               	movf	can_write@data^0,w,c
   762  0000BA  26D9               	addwf	fsr2l,f,c
   763  0000BC  5018               	movf	(can_write@data+1)^0,w,c
   764  0000BE  22DA               	addwfc	fsr2h,f,c
   765  0000C0  50DF               	movf	indf2,w,c
   766  0000C2  6E19               	movwf	??_can_write^0,c
   767  0000C4  C019  FF49         	movff	??_can_write,3913
   768  0000C8                     
   769                           ;./can_read.h: 64:    TXB0D4 = data[4];
   770  0000C8  EE20 F004          	lfsr	2,4
   771  0000CC  5017               	movf	can_write@data^0,w,c
   772  0000CE  26D9               	addwf	fsr2l,f,c
   773  0000D0  5018               	movf	(can_write@data+1)^0,w,c
   774  0000D2  22DA               	addwfc	fsr2h,f,c
   775  0000D4  50DF               	movf	indf2,w,c
   776  0000D6  6E19               	movwf	??_can_write^0,c
   777  0000D8  C019  FF4A         	movff	??_can_write,3914
   778  0000DC                     
   779                           ;./can_read.h: 65:    TXB0D5 = data[5];
   780  0000DC  EE20 F005          	lfsr	2,5
   781  0000E0  5017               	movf	can_write@data^0,w,c
   782  0000E2  26D9               	addwf	fsr2l,f,c
   783  0000E4  5018               	movf	(can_write@data+1)^0,w,c
   784  0000E6  22DA               	addwfc	fsr2h,f,c
   785  0000E8  50DF               	movf	indf2,w,c
   786  0000EA  6E19               	movwf	??_can_write^0,c
   787  0000EC  C019  FF4B         	movff	??_can_write,3915
   788  0000F0                     
   789                           ;./can_read.h: 66:    TXB0D6 = data[6];
   790  0000F0  EE20 F006          	lfsr	2,6
   791  0000F4  5017               	movf	can_write@data^0,w,c
   792  0000F6  26D9               	addwf	fsr2l,f,c
   793  0000F8  5018               	movf	(can_write@data+1)^0,w,c
   794  0000FA  22DA               	addwfc	fsr2h,f,c
   795  0000FC  50DF               	movf	indf2,w,c
   796  0000FE  6E19               	movwf	??_can_write^0,c
   797  000100  C019  FF4C         	movff	??_can_write,3916
   798  000104                     
   799                           ;./can_read.h: 67:    TXB0D7 = data[7];
   800  000104  EE20 F007          	lfsr	2,7
   801  000108  5017               	movf	can_write@data^0,w,c
   802  00010A  26D9               	addwf	fsr2l,f,c
   803  00010C  5018               	movf	(can_write@data+1)^0,w,c
   804  00010E  22DA               	addwfc	fsr2h,f,c
   805  000110  50DF               	movf	indf2,w,c
   806  000112  6E19               	movwf	??_can_write^0,c
   807  000114  C019  FF4D         	movff	??_can_write,3917
   808  000118                     
   809                           ;./can_read.h: 69:    TXB0CON = 0x08;
   810  000118  0E08               	movlw	8
   811  00011A  CFE8 FF40          	movff	wreg,3904
   812  00011E  0012               	return		;funcret
   813  000120  FFFF               	dw	65535	; errata NOP
   814  000122                     __end_of_can_write:
   815                           	callstack 0
   816                           
   817 ;; *************** function _can_sys_init *****************
   818 ;; Defined at:
   819 ;;		line 5 in file "canconfig.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		None
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   833 ;;      Params:         0       0       0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0
   836 ;;      Totals:         0       0       0       0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 2
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text6
   848  00030C                     __ptext6:
   849                           	callstack 0
   850  00030C                     _can_sys_init:
   851                           	callstack 0
   852  00030C  FFFF               	dw	65535	; assembler added errata NOP
   853  00030E                     
   854                           ;canconfig.c: 7:     TRISBbits.RB2 = 0;
   855  00030E  9493               	bcf	147,2,c	;volatile
   856                           
   857                           ;canconfig.c: 8:     TRISBbits.RB3 = 1;
   858  000310  8693               	bsf	147,3,c	;volatile
   859  000312  0012               	return		;funcret
   860  000314  FFFF               	dw	65535	; errata NOP
   861  000316                     __end_of_can_sys_init:
   862                           	callstack 0
   863                           
   864 ;; *************** function _ISR1 *****************
   865 ;; Defined at:
   866 ;;		line 17 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   880 ;;      Params:         0       0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0
   883 ;;      Totals:         0       0       0       0       0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 1
   887 ;; This function calls:
   888 ;;		_can_read
   889 ;; This function is called by:
   890 ;;		Interrupt level 2
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	intcode
   895  000008                     __pintcode:
   896                           	callstack 0
   897  000008                     _ISR1:
   898                           	callstack 0
   899  000008  FFFF               	dw	65535	; assembler added errata NOP
   900                           
   901                           ;incstack = 0
   902  00000A  8240               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   903  00000C                     
   904                           ;main.c: 19:     PORTBbits.RB0=1;
   905  00000C  8081               	bsf	129,0,c	;volatile
   906                           
   907                           ;main.c: 20:     if(RXB0IF == 1) {
   908  00000E  A0A4               	btfss	4004,0,c	;volatile
   909  000010  EF0C  F000         	goto	i2u6_41
   910  000014  EF0F  F000         	goto	i2u6_40
   911  000018                     i2u6_41:
   912  000018  FFFF               	dw	65535	; assembler added errata NOP
   913  00001A  EF15  F000         	goto	i2l87
   914  00001E                     i2u6_40:
   915  00001E  FFFF               	dw	65535	; assembler added errata NOP
   916  000020                     
   917                           ;main.c: 21:         GIE = 0;
   918  000020  9EF2               	bcf	4082,7,c	;volatile
   919                           
   920                           ;main.c: 22:         RXB0IF = 0;
   921  000022  90A4               	bcf	4004,0,c	;volatile
   922  000024                     
   923                           ;main.c: 23:         can_read();
   924  000024  EC34  F001         	call	_can_read	;wreg free
   925  000028                     
   926                           ;main.c: 24:         GIE = 1;
   927  000028  8EF2               	bsf	4082,7,c	;volatile
   928  00002A                     i2l87:
   929  00002A  FFFF               	dw	65535	; assembler added errata NOP
   930  00002C  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   931  00002E  0011               	retfie		f
   932  000030  FFFF               	dw	65535	; errata NOP
   933  000032                     __end_of_ISR1:
   934                           	callstack 0
   935                           
   936 ;; *************** function _can_read *****************
   937 ;; Defined at:
   938 ;;		line 30 in file "./can_read.h"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  data1          20    0[COMRAM] unsigned char [20]
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   952 ;;      Params:         0       0       0       0       0       0       0
   953 ;;      Locals:        20       0       0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0       0       0
   955 ;;      Totals:        20       0       0       0       0       0       0
   956 ;;Total ram usage:       20 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_ISR1
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text8
   966  000268                     __ptext8:
   967                           	callstack 0
   968  000268                     _can_read:
   969                           	callstack 0
   970  000268  FFFF               	dw	65535	; assembler added errata NOP
   971  00026A                     
   972                           ;./can_read.h: 32:     unsigned char data1[20];;./can_read.h: 33:     CANCON = 0x0E;
   973  00026A  0E0E               	movlw	14
   974  00026C  6E6F               	movwf	111,c	;volatile
   975  00026E                     
   976                           ;./can_read.h: 34:     data1[0]= RXB0D0;
   977  00026E  CF66 F001          	movff	3942,can_read@data1	;volatile
   978  000272                     
   979                           ;./can_read.h: 35:     data1[1] = RXB0D1;
   980  000272  CF67 F002          	movff	3943,can_read@data1+1	;volatile
   981  000276                     
   982                           ;./can_read.h: 36:     data1[2] = RXB0D2;
   983  000276  CF68 F003          	movff	3944,can_read@data1+2	;volatile
   984  00027A                     
   985                           ;./can_read.h: 37:     data1[3] = RXB0D3;
   986  00027A  CF69 F004          	movff	3945,can_read@data1+3	;volatile
   987  00027E                     
   988                           ;./can_read.h: 38:     data1[4] = RXB0D4;
   989  00027E  CF6A F005          	movff	3946,can_read@data1+4	;volatile
   990  000282                     
   991                           ;./can_read.h: 39:     data1[5] = RXB0D5;
   992  000282  CF6B F006          	movff	3947,can_read@data1+5	;volatile
   993  000286                     
   994                           ;./can_read.h: 40:     data1[6] = RXB0D6;
   995  000286  CF6C F007          	movff	3948,can_read@data1+6	;volatile
   996  00028A                     
   997                           ;./can_read.h: 41:     data1[7]= RXB0D7;
   998  00028A  CF6D F008          	movff	3949,can_read@data1+7	;volatile
   999  00028E                     
  1000                           ;./can_read.h: 42:     data1[8] = RXB0DLC;
  1001  00028E  CF65 F009          	movff	3941,can_read@data1+8	;volatile
  1002  000292                     
  1003                           ;./can_read.h: 43:     data1[9] = RXB0SIDH;
  1004  000292  CF61 F00A          	movff	3937,can_read@data1+9	;volatile
  1005  000296                     
  1006                           ;./can_read.h: 44:     data1[10] = RXB0SIDL;
  1007  000296  CF62 F00B          	movff	3938,can_read@data1+10	;volatile
  1008  00029A                     
  1009                           ;./can_read.h: 45:     RXB0CONbits.RXB0FUL = 0;
  1010  00029A  9E60               	bcf	96,7,c	;volatile
  1011                           
  1012                           ;./can_read.h: 46:     CANCON = 0x08;
  1013  00029C  0E08               	movlw	8
  1014  00029E  6E6F               	movwf	111,c	;volatile
  1015  0002A0  0012               	return		;funcret
  1016  0002A2  FFFF               	dw	65535	; errata NOP
  1017  0002A4                     __end_of_can_read:
  1018                           	callstack 0
  1019  0002A4  FFFF               	dw	65535	; assembler added errata NOP
  1020                           
  1021                           	psect	rparam
  1022  0000                     
  1023                           	psect	temp
  1024  000040                     btemp:
  1025                           	callstack 0
  1026  000040                     	ds	1
  1027  0000                     int$flags	set	btemp
  1028  0000                     wtemp8	set	btemp+1
  1029  0000                     ttemp5	set	btemp+1
  1030  0000                     ttemp6	set	btemp+4
  1031  0000                     ttemp7	set	btemp+8
  1032                           
  1033                           	psect	idloc
  1034                           
  1035                           ;Config register IDLOC0 @ 0x200000
  1036                           ;	unspecified, using default values
  1037  200000                     	org	2097152
  1038  200000  FF                 	db	255
  1039                           
  1040                           ;Config register IDLOC1 @ 0x200001
  1041                           ;	unspecified, using default values
  1042  200001                     	org	2097153
  1043  200001  FF                 	db	255
  1044                           
  1045                           ;Config register IDLOC2 @ 0x200002
  1046                           ;	unspecified, using default values
  1047  200002                     	org	2097154
  1048  200002  FF                 	db	255
  1049                           
  1050                           ;Config register IDLOC3 @ 0x200003
  1051                           ;	unspecified, using default values
  1052  200003                     	org	2097155
  1053  200003  FF                 	db	255
  1054                           
  1055                           ;Config register IDLOC4 @ 0x200004
  1056                           ;	unspecified, using default values
  1057  200004                     	org	2097156
  1058  200004  FF                 	db	255
  1059                           
  1060                           ;Config register IDLOC5 @ 0x200005
  1061                           ;	unspecified, using default values
  1062  200005                     	org	2097157
  1063  200005  FF                 	db	255
  1064                           
  1065                           ;Config register IDLOC6 @ 0x200006
  1066                           ;	unspecified, using default values
  1067  200006                     	org	2097158
  1068  200006  FF                 	db	255
  1069                           
  1070                           ;Config register IDLOC7 @ 0x200007
  1071                           ;	unspecified, using default values
  1072  200007                     	org	2097159
  1073  200007  FF                 	db	255
  1074                           
  1075                           	psect	config
  1076                           
  1077                           ; Padding undefined space
  1078  300000                     	org	3145728
  1079  300000  FF                 	db	255
  1080                           
  1081                           ;Config register CONFIG1H @ 0x300001
  1082                           ;	Oscillator Selection bits
  1083                           ;	OSC = HS, HS oscillator
  1084                           ;	Oscillator System Clock Switch Enable bit
  1085                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  1086  300001                     	org	3145729
  1087  300001  22                 	db	34
  1088                           
  1089                           ;Config register CONFIG2L @ 0x300002
  1090                           ;	Power-up Timer Enable bit
  1091                           ;	PWRT = OFF, PWRT disabled
  1092                           ;	Brown-out Reset Enable bit
  1093                           ;	BOR = ON, Brown-out Reset enabled
  1094                           ;	Brown-out Reset Voltage bits
  1095                           ;	BORV = 25, VBOR set to 2.5V
  1096  300002                     	org	3145730
  1097  300002  0F                 	db	15
  1098                           
  1099                           ;Config register CONFIG2H @ 0x300003
  1100                           ;	Watchdog Timer Enable bit
  1101                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1102                           ;	Watchdog Timer Postscale Select bits
  1103                           ;	WDTPS = 128, 1:128
  1104  300003                     	org	3145731
  1105  300003  0E                 	db	14
  1106                           
  1107                           ;Config register CONFIG4L @ 0x300006
  1108                           ;	Stack Full/Underflow Reset Enable bit
  1109                           ;	STVR = OFF, Stack Full/Underflow will not cause Reset
  1110                           ;	Low-Voltage ICSP Enable bit
  1111                           ;	LVP = OFF, Low-Voltage ICSP disabled
  1112                           ;	Background Debugger Enable bit
  1113                           ;	DEBUG = 0x1, unprogrammed default
  1114  300006                     	org	3145734
  1115  300006  80                 	db	128
  1116                           
  1117                           ; Padding undefined space
  1118  300007                     	org	3145735
  1119  300007  FF                 	db	255
  1120                           
  1121                           ;Config register CONFIG5L @ 0x300008
  1122                           ;	Code Protection bit
  1123                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  1124                           ;	Code Protection bit
  1125                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  1126                           ;	Code Protection bit
  1127                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  1128                           ;	Code Protection bit
  1129                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  1130  300008                     	org	3145736
  1131  300008  0F                 	db	15
  1132                           
  1133                           ;Config register CONFIG5H @ 0x300009
  1134                           ;	Boot Block Code Protection bit
  1135                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  1136                           ;	Data EEPROM Code Protection bit
  1137                           ;	CPD = OFF, Data EEPROM not code protected
  1138  300009                     	org	3145737
  1139  300009  C0                 	db	192
  1140                           
  1141                           ;Config register CONFIG6L @ 0x30000A
  1142                           ;	Write Protection bit
  1143                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  1144                           ;	Write Protection bit
  1145                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  1146                           ;	Write Protection bit
  1147                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  1148                           ;	Write Protection bit
  1149                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  1150  30000A                     	org	3145738
  1151  30000A  0F                 	db	15
  1152                           
  1153                           ;Config register CONFIG6H @ 0x30000B
  1154                           ;	Configuration Register Write Protection bit
  1155                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  1156                           ;	Boot Block Write Protection bit
  1157                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  1158                           ;	Data EEPROM Write Protection bit
  1159                           ;	WRTD = OFF, Data EEPROM not write protected
  1160  30000B                     	org	3145739
  1161  30000B  E0                 	db	224
  1162                           
  1163                           ;Config register CONFIG7L @ 0x30000C
  1164                           ;	Table Read Protection bit
  1165                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  1166                           ;	Table Read Protection bit
  1167                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  1168                           ;	Table Read Protection bit
  1169                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  1170                           ;	Table Read Protection bit
  1171                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  1172  30000C                     	org	3145740
  1173  30000C  0F                 	db	15
  1174                           
  1175                           ;Config register CONFIG7H @ 0x30000D
  1176                           ;	Boot Block Table Read Protection bit
  1177                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  1178  30000D                     	org	3145741
  1179  30000D  40                 	db	64
  1180                           tosu	equ	0xFFF
  1181                           tosh	equ	0xFFE
  1182                           tosl	equ	0xFFD
  1183                           stkptr	equ	0xFFC
  1184                           pclatu	equ	0xFFB
  1185                           pclath	equ	0xFFA
  1186                           pcl	equ	0xFF9
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           prodh	equ	0xFF4
  1192                           prodl	equ	0xFF3
  1193                           indf0	equ	0xFEF
  1194                           postinc0	equ	0xFEE
  1195                           postdec0	equ	0xFED
  1196                           preinc0	equ	0xFEC
  1197                           plusw0	equ	0xFEB
  1198                           fsr0h	equ	0xFEA
  1199                           fsr0l	equ	0xFE9
  1200                           wreg	equ	0xFE8
  1201                           indf1	equ	0xFE7
  1202                           postinc1	equ	0xFE6
  1203                           postdec1	equ	0xFE5
  1204                           preinc1	equ	0xFE4
  1205                           plusw1	equ	0xFE3
  1206                           fsr1h	equ	0xFE2
  1207                           fsr1l	equ	0xFE1
  1208                           bsr	equ	0xFE0
  1209                           indf2	equ	0xFDF
  1210                           postinc2	equ	0xFDE
  1211                           postdec2	equ	0xFDD
  1212                           preinc2	equ	0xFDC
  1213                           plusw2	equ	0xFDB
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    can_write@data	PTR unsigned char  size(2) Largest target is 8
		 -> main@sw_on_data(COMRAM[8]), main@sw_off_data(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_can_write

Critical Paths under _ISR1 in COMRAM

    _ISR1->_can_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR1 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     753
                                             29 COMRAM    18    18      0
                       _can_sys_init
                          _can_write
                         _gpios_init
                         _init_inrpt
                     _masking_filter
                           _set_mode
 ---------------------------------------------------------------------------------
 (1) _set_mode                                             2     0      2      98
                                             20 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _masking_filter                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_inrpt                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gpios_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _can_write                                            9     5      4     592
                                             20 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _can_sys_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR1                                                 0     0      0     150
                           _can_read
 ---------------------------------------------------------------------------------
 (3) _can_read                                            20    20      0     150
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_sys_init
   _can_write
   _gpios_init
   _init_inrpt
   _masking_filter
   _set_mode

 _ISR1 (ROOT)
   _can_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      3F       1       67.0%
BITBIGSFRhlhh       4B      0       0      17        0.0%
BITBIGSFRlllll      3E      0       0      24        0.0%
BITBIGSFRlllh       12      0       0      22        0.0%
BITBIGSFRhllhl      11      0       0      19        0.0%
BITBIGSFRhllhh       F      0       0      18        0.0%
BITBIGSFRhlll        E      0       0      20        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRllllh       2      0       0      23        0.0%
BITBIGSFRllh         2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      25        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Oct 19 10:41:47 2022

                                       __end_of_can_sys_init 0316  
                                                         l81 02FC  
                                                         l78 011E  
                                                         u90 01E6  
                                                         u91 01E0  
                                                        l121 02DE  
                                                        l118 0312  
                                                        l137 0308  
                                                        l129 0262  
                                                        l901 0302  
                                                        l941 006C  
                                                        l933 003A  
                                                        l871 030E  
                                                        l951 00B4  
                                                        l943 0074  
                                                        l935 003E  
                                                        l961 0118  
                                                        l953 00C8  
                                                        l945 007C  
                                                        l937 0046  
                                                        l955 00DC  
                                                        l947 008C  
                                                        l939 004E  
                                                        l971 020C  
                                                        l963 01CC  
                                                        l957 00F0  
                                                        l949 00A0  
                                                        l869 02F4  
                                                        l973 0222  
                                                        l965 01D0  
                                                        l959 0104  
                                                        l975 0238  
                                                        l983 0254  
                                                        l967 01E8  
                                                        l991 012C  
                                                        l977 024E  
                                                        l969 0200  
                                                        l993 0138  
                                                        l899 02D2  
                                                        l987 025C  
                                                        l995 013C  
                                                        _GIE 007F97  
                                                        l997 0140  
                                                        l989 0122  
                                                        l999 0154  
                                                        u100 01FE  
                                                        u101 01F8  
                                                        u110 0220  
                                                        u111 021A  
                                                        u120 0236  
                                                        u121 0230  
                                                        u130 024C  
                                                        u131 0246  
                                                        u141 014C  
                                                        u151 015E  
                                                        u167 0186  
                                                        u177 01B2  
                                                        wreg 000FE8  
                                                       l1001 0166  
                                                       l1003 017C  
                                                       l1005 0194  
                                                       l1007 01A8  
                                                       l1009 01C0  
                                                       _ISR1 0008  
                                                       _PEIE 007F96  
                                                       i2l75 02A0  
                                                       i2l87 002A  
                                                       _RBPU 007F8F  
                                                       _main 0122  
                                                       fsr2h 000FDA  
                                                       indf2 000FDF  
                                                       fsr1l 000FE1  
                                                       fsr2l 000FD9  
                                                       btemp 0040  
                                                       start 0032  
                                               ___param_bank 000000  
                                                      ?_ISR1 0001  
                                                      ?_main 0001  
                                                      i2l821 027A  
                                                      i2l813 026A  
                                                      i2l831 028E  
                                                      i2l823 027E  
                                                      i2l815 026E  
                                                      i2l903 000C  
                                                      i2l833 0292  
                                                      i2l825 0282  
                                                      i2l817 0272  
                                                      i2l905 0020  
                                                      i2l835 0296  
                                                      i2l827 0286  
                                                      i2l819 0276  
                                                      i2l907 0024  
                                                      i2l837 029A  
                                                      i2l829 028A  
                                                      i2l909 0028  
                                              can_read@data1 0001  
                                                      tablat 000FF5  
                                                      plusw1 000FE3  
                                                      plusw2 000FDB  
                                                      ttemp5 0041  
                                                      ttemp6 0044  
                                                      ttemp7 0048  
                                                      status 000FD8  
                                                      wtemp8 0041  
                                               __end_of_ISR1 0032  
                                            __initialization 02A6  
                                               __end_of_main 01CA  
                                                     ??_ISR1 0015  
                                                     ??_main 001E  
                                              __activetblptr 000000  
                                                     _CANCON 000F6F  
                                                     _RXB0D0 000F66  
                                                     _RXB0D1 000F67  
                                                     _RXB0D2 000F68  
                                                     _RXB0D3 000F69  
                                                     _RXB0D4 000F6A  
                                                     _RXB0D5 000F6B  
                                                     _RXB0D6 000F6C  
                                                     _RXB0D7 000F6D  
                                                     _RXB0IE 007D18  
                                                     _RXB0IF 007D20  
                                                     _RXB0IP 007D28  
                                                     _TXB0D0 000F46  
                                                     _TXB0D1 000F47  
                                                     _TXB0D2 000F48  
                                                     _TXB0D3 000F49  
                                                     _TXB0D4 000F4A  
                                                     _TXB0D5 000F4B  
                                                     _TXB0D6 000F4C  
                                                     _TXB0D7 000F4D  
                                           __end_of_can_read 02A4  
                                                     i2u6_40 001E  
                                                     i2u6_41 0018  
                                                     isa$std 000001  
                                               __pdataCOMRAM 0030  
                                           __end_of_set_mode 0268  
                                                     tblptrh 000FF7  
                                                     tblptrl 000FF6  
                                                     tblptru 000FF8  
                                              can_write@data 0017  
                                               _can_sys_init 030C  
                                                 __accesstop 0060  
                                    __end_of__initialization 02C6  
                                              ___rparam_used 000001  
                                             __pcstackCOMRAM 0001  
                                                    _CANSTAT 000F6E  
                                                    _BRGCON1 000F70  
                                                    _BRGCON2 000F71  
                                                    _BRGCON3 000F72  
                                                  ?_can_read 0001  
                                                    _RXB0DLC 000F65  
                                                    _TXB0DLC 000F45  
                                                    _TXB0CON 000F40  
                                          __end_of_can_write 0122  
                                                    __Hparam 0000  
                                                    __Lparam 0000  
                                                  ?_set_mode 0015  
                                                 _gpios_init 0300  
                                                 _init_inrpt 02F2  
                                                    __pcinit 02A6  
                                                    __ramtop 0600  
                                                    __ptext0 0122  
                                                    __ptext1 01CA  
                                                    __ptext2 02D0  
                                                    __ptext3 02F2  
                                                    __ptext4 0300  
                                                    __ptext5 0036  
                                                    __ptext6 030C  
                                                    __ptext8 0268  
                                                 ??_can_read 0001  
                                                set_mode@bud 0015  
                                       end_of_initialization 02C6  
                                                 ??_set_mode 0017  
                                                    postdec1 000FE5  
                                                    postinc0 000FEE  
                                             main@sw_on_data 0028  
                                                  _PORTBbits 000F81  
                                                  _TRISBbits 000F93  
                                                ?_gpios_init 0001  
                                             _masking_filter 02D0  
                                                ?_init_inrpt 0001  
                                              __pidataCOMRAM 02E2  
                                        start_initialization 02A6  
                                     __end_of_masking_filter 02E2  
                                               can_write@DLC 001B  
                                                  _can_write 0036  
                                                  __pintcode 0008  
                                            ?_masking_filter 0001  
                                                 ?_can_write 0015  
                                                   _RXB0SIDH 000F61  
                                                   _RXB0SIDL 000F62  
                                                  main@F5710 0038  
                                                  main@F5712 0030  
                                                   _RXF0SIDH 000F00  
                                                   _RXF0SIDL 000F01  
                                                   _TXB0SIDH 000F41  
                                                   _TXB0SIDL 000F42  
                                                  copy_data0 02BA  
                                              ?_can_sys_init 0001  
                                                   __Hrparam 0000  
                                                   __Lrparam 0000  
                                               ??_gpios_init 0015  
                                                can_write@HB 001D  
                                                can_write@LB 001C  
                                               ??_init_inrpt 0015  
                                                   _can_read 0268  
                                             ??_can_sys_init 0015  
                                         __end_of_gpios_init 030C  
                                                ??_can_write 0019  
                                         __end_of_init_inrpt 0300  
                                                   _set_mode 01CA  
                                                   isa$xinst 000000  
                                                   int$flags 0040  
                                                _RXB0CONbits 000F60  
                                                   intlevel2 0316  
                                           ??_masking_filter 0015  
                                            main@sw_off_data 0020  
                                            can_write@msg_id 0015  
